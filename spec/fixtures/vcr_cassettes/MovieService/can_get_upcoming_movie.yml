---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/upcoming?api_key=<MOVIE_API_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 22 Nov 2020 18:15:48 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 f9c71f0b3d7efb64e79543064c9e0bdd.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - x_rJ6vuLLRQ9R60oHwZt5Rci2LbUqjnan93ORKG8tkD0A8VTDQqRZg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 22 Nov 2020 18:15:48 GMT
recorded_with: VCR 6.0.0
