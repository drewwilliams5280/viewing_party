---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIE_API_KEY>&include_adult=false&language=en-US&page=1&query=dragon
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 00:37:36 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 a47d45d25cc354507eae77aba89ca253.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - A2S15X9UCQhhoKzxSWmzKEtfUZyO6-iFgwEGOlQLHc_lzmlUneGm-w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 00:37:36 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIE_API_KEY>&include_adult=false&language=en-US&page=2&query=dragon
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 00:37:37 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 dcee1124728af441beff75c95d9d9d74.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - Tv-98b2xWCRsMBoIiNHiClhM2EbL1rKWql_ohSvGPcA7g9dLZDq-HA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 00:37:37 GMT
recorded_with: VCR 6.0.0
